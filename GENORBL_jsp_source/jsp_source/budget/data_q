           ps1=mk.con.prepareStatement("SELECT B.bgt_seq,B.SL_NO_ROWVAL,B.BGT_HD_ROWORDER, "
                                     + " MAX(CASE WHEN A.mm_order = 4 THEN DECODE(TO_CHAR(NVL(A.amt,0)),'0',' ',TO_CHAR(NVL(A.amt,0),'9999990.99999')) END) apr, "
                                     + " MAX(CASE WHEN A.mm_order = 5 THEN DECODE(TO_CHAR(NVL(A.amt,0)),'0',' ',TO_CHAR(NVL(A.amt,0),'9999990.99999')) END) may, "
                                     + " MAX(CASE WHEN A.mm_order = 6 THEN DECODE(TO_CHAR(NVL(A.amt,0)),'0',' ',TO_CHAR(NVL(A.amt,0),'9999990.99999')) END) jun, "
                                     + " MAX(CASE WHEN A.mm_order = 7 THEN DECODE(TO_CHAR(NVL(A.amt,0)),'0',' ',TO_CHAR(NVL(A.amt,0),'9999990.99999')) END) jul, "
                                     + " MAX(CASE WHEN A.mm_order = 8 THEN DECODE(TO_CHAR(NVL(A.amt,0)),'0',' ',TO_CHAR(NVL(A.amt,0),'9999990.99999')) END) aug, "
                                     + " MAX(CASE WHEN A.mm_order = 9 THEN DECODE(TO_CHAR(NVL(A.amt,0)),'0',' ',TO_CHAR(NVL(A.amt,0),'9999990.99999')) END) sep, "
                                     + " MAX(CASE WHEN A.mm_order = 10 THEN DECODE(TO_CHAR(NVL(A.amt,0)),'0',' ',TO_CHAR(NVL(A.amt,0),'9999990.99999')) END) oct, "
                                     + " MAX(CASE WHEN A.mm_order = 11 THEN DECODE(TO_CHAR(NVL(A.amt,0)),'0',' ',TO_CHAR(NVL(A.amt,0),'9999990.99999')) END) nov, "
                                     + " MAX(CASE WHEN A.mm_order = 12 THEN DECODE(TO_CHAR(NVL(A.amt,0)),'0',' ',TO_CHAR(NVL(A.amt,0),'9999990.99999')) END) dec, "
                                     + " MAX(CASE WHEN A.mm_order = 1 THEN DECODE(TO_CHAR(NVL(A.amt,0)),'0',' ',TO_CHAR(NVL(A.amt,0),'9999990.99999')) END) jan, "
                                     + " MAX(CASE WHEN A.mm_order = 2 THEN DECODE(TO_CHAR(NVL(A.amt,0)),'0',' ',TO_CHAR(NVL(A.amt,0),'9999990.99999')) END) feb, "
                                     + " MAX(CASE WHEN A.mm_order = 3 THEN DECODE(TO_CHAR(NVL(A.amt,0)),'0',' ',TO_CHAR(NVL(A.amt,0),'9999990.99999')) END) mar, "
                                     + " MAX(CASE WHEN A.mm_order = 13 THEN DECODE(TO_CHAR(NVL(A.amt,0)),'0',' ',TO_CHAR(NVL(A.amt,0),'9999990.99999')) END) tot "
                                     + " FROM ( SELECT * "
                                     + "        FROM bgt_form2b_data "
	                             + "        WHERE bgt_yr = ?) A, bgt_form2b_struc B "
                                     + " WHERE  A.bgt_seq(+) = B.bgt_seq "
                                     + " AND   stn_cd = ? "
                                     + " AND   sec_cd = ?  "
                                     + " GROUP BY B.SL_NO_ROWVAL,B.BGT_HD_ROWORDER,B.bgt_seq "
                                     + " ORDER BY B.SL_NO_ROWVAL,B.BGT_HD_ROWORDER " ) ;

           ps1.setString(1,sBgt_Fr_Year);
           ps1.setString(2,sStn_cd);
           ps1.setString(3,sSec_cd);

           rs1=ps1.executeQuery();

           while(rs1.next()){


  rows = new ArrayList() ;

rows.add(rs1.getString(1)) ;
rows.add(rs1.getString(2)) ;
rows.add(rs1.getString(3)) ;
rows.add(rs1.getString(4)) ;
rows.add(rs1.getString(5)) ;
rows.add(rs1.getString(6)) ;
rows.add(rs1.getString(7)) ;
rows.add(rs1.getString(8)) ;
rows.add(rs1.getString(9)) ;
rows.add(rs1.getString(10)) ;
rows.add(rs1.getString(11)) ;
rows.add(rs1.getString(12)) ;
rows.add(rs1.getString(13)) ;
rows.add(rs1.getString(14)) ;
rows.add(rs1.getString(15)) ;
rows.add(rs1.getString(16)) ;

l2.add(rows);


/*

                 sCell_Id_for_exstngVal = "";
                 sCell_Id_for_exstngVal   = "T_"+rs1.getString(1)+"_"+rs1.getString(3) ;

%>
<!--
<script>

           //alert("Id"+'<%= sCell_Id_for_exstngVal %>');
           popl_exstngVal_inCells('<%= sCell_Id_for_exstngVal %>','<%= rs1.getString(4) %>');

</script>
-->
<%           
*/

           }

           rs1.close();
           ps1.close();
     
           ps1=null;
           rs1=null;


        for ( i=0; i<l1.size(); i++ ) {
            totrec++ ;
            rows1 = (List)l1.get(i) ;
            rows2 = (List)l2.get(i) ;

            if ( rows1.get(5).equals(rows2.get(0)) ) {
                rows = new ArrayList() ;
                rows.add("\""+(String)rows1.get(0)+"\"") ;
                rows.add("\""+(String)rows1.get(1)+"\"") ;
                rows.add("\""+(String)rows1.get(2)+"\"") ;
                //attr = rows1.get(2).replaceAll("\"","'") ;
                //rows.add("\""+attr+"\"") ;

                for ( j=3; j<rows2.size(); j++ ) {
                    rows.add("\""+(String)rows2.get(j)+"\"") ;
                }
                rows.add("\"#"+(String)rows1.get(4)+"\"") ;
            }
            detailList.add(rows) ;
        }

